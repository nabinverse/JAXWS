
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.client;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import javax.xml.ws.Dispatch;
import javax.xml.ws.Service;
import javax.xml.ws.soap.SOAPBinding;

import com.model.BillDetails;
import com.model.Customer;
import com.tintin.SimpleService;;

/**
 * This class was generated by Apache CXF 3.0.0
 * 2015-08-25T15:18:13.844+05:30
 * Generated source version: 3.0.0
 * 
 */
public class SimpleServiceDynamicInterfaceInvocationClient {

    public static void main(String[] args) throws Exception {
    	QName serviceName = new QName("http://tintin.com/", "SimpleServiceImplService");
        QName portName = new QName("http://tintin.com/", "SimpleServiceImplPort");
        //below code wants wsdl to be present on class path
        //Service service = Service.create(serviceName);
        //service.addPort(portName, SOAPBinding.SOAP11HTTP_BINDING,"http://localhost:8080/JAXWS-Service/services/SimpleServiceImplPort");
        Service service = Service.create(new URL("http://localhost:8080/JAXWS-Service/services/SimpleServiceImplPort?wsdl"),serviceName);
        
        //Create the dynamic invocation object from this service.
        Dispatch<Source> dispatch = service.createDispatch(portName,Source.class,Service.Mode.PAYLOAD);
         
        String inputMsg="<ns2:calculateBill xmlns:ns2=\"http://tintin.com/\"><arg0><address>B-205, Silver Estate, Doltala -700132</address><age>29</age><name> </name><phone>8697042514</phone></arg0></ns2:calculateBill>";
        ByteArrayInputStream bais = new ByteArrayInputStream(inputMsg.getBytes());
        Source input = new StreamSource(bais);

         //  Invoking WebService
        Source response = dispatch.invoke(input);
         
         //  Process the response.
        StreamResult result = new StreamResult(new ByteArrayOutputStream());
        Transformer trans = TransformerFactory.newInstance().newTransformer();
        trans.transform(response, result);
        ByteArrayOutputStream baos = (ByteArrayOutputStream) result.getOutputStream();

         //  Write out the response content to string.
        String responseStr = new String(baos.toByteArray());
        System.out.println("Response : ->"+responseStr);
    }

}